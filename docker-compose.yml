services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: monitoring
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d monitoring"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      DB_HOST: postgres
      DB_NAME: monitoring
      DB_USER: admin
      DB_PASSWORD: password123
      REDIS_HOST: redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure

  metrics-collector:
    build: ./metrics-collector
    environment:
      BACKEND_URL: http://backend:5000
    depends_on:
      - backend
    restart: on-failure

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    environment:
      REACT_APP_BACKEND_URL: http://localhost:5000
    depends_on:
      - backend
    restart: on-failure

volumes:
  postgres_data: